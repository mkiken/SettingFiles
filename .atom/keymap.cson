# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# 'body':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#

'.editor:not(.mini)':
  'ctrl-.': 'editor:delete-line'
  'ctrl-j': 'editor:newline-below'
  'ctrl-shift-j': 'editor:newline-above'
  'ctrl-w': 'editor:delete-to-beginning-of-word'
  'alt-^': 'editor:join-lines'
  'ctrl-^': 'emmet:increment-number-by-1'
  'ctrl-~': 'emmet:decrement-number-by-1'
  'alt-down': 'vim-mode:move-to-next-paragraph'
  'alt-up': 'vim-mode:move-to-previous-paragraph'
  'ctrl-?': 'core:redo'
  'alt-d': 'editor:delete-to-end-of-word'
  'ctrl-,': 'cut-line:copy-line'
  'ctrl-.': 'cut-line:cut-line'
  'ctrl-:': 'cut-line:paste-line'
  'ctrl-d': 'core:delete'
  'ctrl-[': 'bracket-matcher:go-to-matching-bracket'
  'ctrl-alt-[': 'bracket-matcher:select-inside-brackets'

'.platform-darwin, .platform-darwin .command-palette .editor .vim-mode':
  'alt-x': 'command-palette:toggle'
  'ctrl-c f': 'tree-view:toggle'
  'ctrl-c l': 'go-to-line:toggle'
  'ctrl-i': 'editor:auto-indent'
  'ctrl-right': 'pane:show-next-item'
  'ctrl-left': 'pane:show-previous-item'
  'ctrl-;': 'editor:toggle-line-comments'
  'alt-;': 'editor:toggle-line-comments'

'.editor.vim-mode:not(.insert-mode)':
  'ctrl-a': 'emmet:increment-number-by-1'
  'ctrl-x': 'emmet:decrement-number-by-1'
  # 'ctrl-d': 'core:page-down'
  # 'ctrl-u': 'core:page-up'
  # '=': 'core:auto-indent'
  ',': 'editor:toggle-line-comments'
  '%': 'bracket-matcher:go-to-matching-bracket'
  'O': 'editor:newline-below'
  'ctrl-d': 'core:page-down'
  'g r': 'pane:show-previous-item'



'.autocomplete-plus input.hidden-input':
  'enter': 'autocomplete-plus:confirm'
  'ctrl-n': 'autocomplete-plus:select-next'
  'ctrl-p': 'autocomplete-plus:select-previous'
  # 'tab': 'autocomplete-plus:select-next'
  # 'shift-tab': 'autocomplete-plus:select-previous'
  'enter': 'autocomplete-plus:confirm'
