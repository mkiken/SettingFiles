#!/bin/sh

# set Repo "$HOME/Desktop/repository/SettingFiles/"
Repo="`pwd | sed -e \"s/.\{3\}$//\"`"
# set Repo "$SET/"

echo "ln -si ${Repo}.aliases ~/.aliases"
ln -si "${Repo}.aliases" ~/.aliases

echo "ln -si ${Repo}gitfiles/.gitconfig ~/.gitconfig"
ln -si "${Repo}gitfiles/.gitconfig" ~/.gitconfig

echo "ln -si ${Repo}gitfiles/.gitignore_global ~/.gitignore"
ln -si "${Repo}gitfiles/.gitignore_global" ~/.gitignore

echo "ln -si ${Repo}vimfiles/.gvimrc ~/.gvimrc"
ln -si "${Repo}vimfiles/.gvimrc" ~/.gvimrc

echo "ln -si ${Repo}vimfiles/.vimrc ~/.vimrc"
ln -si "${Repo}vimfiles/.vimrc" ~/.vimrc

mkdir -p ~/.config/nvim
echo "ln -si ${Repo}vimfiles/.vimrc ~/.config/nvim/init.vim"
ln -si "${Repo}vimfiles/.vimrc" ~/.config/nvim/init.vim

echo "ln -si ${Repo}.zshrc ~/.zshrc"
ln -si "${Repo}.zshrc" ~/.zshrc
# mkdir -p ~/.config/fish
# echo "ln -si ${Repo}config.fish ~/.config/fish/config.fish"
# ln -si ${Repo}config.fish ~/.config/fish/config.fish

echo "ln -si ${Repo}.tigrc ~/.tigrc"
ln -si "${Repo}.tigrc" ~/.tigrc

# echo "ln -si ${Repo}.emacs.d ~"
# ln -si "${Repo}.emacs.d" ~

echo "ln -si ${Repo}vimfiles/.vim ~"
ln -si "${Repo}vimfiles/.vim" ~

echo "ln -si ${Repo}SublimeTextFiles/2/user_OSX.sublime-keymap"
ln -si "${Repo}SublimeTextFiles/2/user_OSX.sublime-keymap" ~/Library/Application\ Support/Sublime\ Text\ 2/Packages/User/Default\ \(OSX\).sublime-keymap

echo "ln -si ${Repo}SublimeTextFiles/2/default_OSX.sublime-keymap"
ln -si "${Repo}SublimeTextFiles/2/default_OSX.sublime-keymap" ~/Library/Application\ Support/Sublime\ Text\ 2/Packages/Default/Default\ \(OSX\).sublime-keymap

echo "ln -si ${Repo}SublimeTextFiles/2/Preferences.sublime-settings"
ln -si "${Repo}SublimeTextFiles/2/Preferences.sublime-settings" ~/Library/Application\ Support/Sublime\ Text\ 2/Packages/User/Preferences.sublime-settings

echo "ln -si ${Repo}.jshintrc"
ln -si "${Repo}.jshintrc" ~/.jshintrc

echo "ln -si ${Repo}.jsbeautifyrc"
ln -si "${Repo}.jsbeautifyrc" ~/.jsbeautifyrc

echo "ln -si ${Repo}.agignore"
ln -si "${Repo}.agignore" ~/.agignore

echo "ln -si ${Repo}.atom/config.cson"
ln -si "${Repo}.atom/config.cson" ~/.atom/config.cson

echo "ln -si ${Repo}.atom/keymap.cson"
ln -si "${Repo}.atom/keymap.cson" ~/.atom/keymap.cson

echo "ln -si ${Repo}.atom/snippets.cson"
ln -si "${Repo}.atom/snippets.cson" ~/.atom/snippets.cson

echo "ln -si ${Repo}.atom/init.coffee"
ln -si "${Repo}.atom/init.coffee" ~/.atom/init.coffee

echo "ln -si ${Repo}.atom/styles.less"
ln -si "${Repo}.atom/styles.less" ~/.atom/styles.less

# echo "ln -si ${Repo}.tmux.conf"
ln -si "${Repo}.tmux.conf" ~/.tmux.conf

echo "ln -si ${Repo}.peco"
ln -si "${Repo}.peco" ~

echo "ln -si ${Repo}.ideavimrc ~/.ideavimrc"
ln -si "${Repo}.ideavimrc" ~/.ideavimrc


# touch ~/.gitconfig.local
cp -i "${Repo}gitfiles/.gitconfig.local_mac" ~/.gitconfig.local
echo "You can write LOCAL settings for git to '~/.gitconfig.local'."

echo 'symbolic links created.'


# mkdir -p ~/.backup
# mkdir -p ~/.backup/emacs/backup
# mkdir -p ~/.backup/emacs/autosave
mkdir -p ~/.backup/vim/backup
mkdir -p ~/.backup/vim/swap
mkdir -p ~/.backup/vim/undo

# echo 'backup directory for emacs and vim made.'
echo 'backup directory for vim made.'


# install commands

ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
# for permission of Homebrew
sudo chown -R $USER /usr/local/
sudo chown -R $USER /Library/Caches/Homebrew/

brew install git
brew install zsh
# brew install fish
brew install rmtrash
# brew install node
# brew install tree
# brew install --cocoa --srgb --with-gnutls --japanese emacs -v
# brew install --cocoa --srgb --japanese emacs -v
brew install vim --devel --with-lua
brew install neovim/neovim/neovim
brew install rlwrap
# brew install z
brew install tmux
brew install reattach-to-user-namespace
# brew install ghc
brew tap peco/peco
brew install peco
brew install ag
brew install gnu-sed
brew install source-highlight
brew install tig

brew tap laurent22/massren
brew install massren
brew install ctags

brew install go


brew reinstall --HEAD fzf
/usr/local/Cellar/fzf/HEAD/install

brew tap phinze/homebrew-cask
brew install brew-cask
# brew cask install atom
brew cask install iterm2
brew cask install evernote
brew cask install google-chrome
brew cask install macvim
brew cask install alfred
# brew cask install xtrafinder
brew cask install dropbox
brew cask install clipmenu
# brew cask install skype
# brew cask install bettertouchtool # 有料に(´・ω・｀)

sudo easy_install Pygments

# touch ~/.z
touch ~/.cd_history_file

ln -s /usr/local/Cellar/git/2.3.1/share/git-core/contrib/diff-highlight/diff-highlight  /usr/local/bin

ln -si "${Repo}submodules/used-mem/used-mem" /usr/local/bin/used-mem

massren --config editor "mvim"

# El Capitanにアップデートした後、gitコマンドが以下のエラーを吐いて動かなくなる問題
# http://qiita.com/Ys_Jn/items/f7ff03f7a890329c3e2a
xcode-select --install

# source ~/.zshrc
# A="${SET}submodules/auto-fu.zsh/auto-fu.zsh" ; (zsh -c "source $A ; auto-fu-zcompile $A ~/.zsh")


# for Tmux Plugin Manager
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

./update

cd ~/.vim/bundle/YouCompleteMe
git submodule update --init --recursive
./install.sh --clang-completer
cd $OLDPWD
cd ~/.vim/bundle/cpsm
./install.sh
cd $OLDPWD

# shell setting
sudo chsh -s /usr/local/bin/zsh
# chsh -s $(`which fish`) $USER

# fish initialize
# fish
# chsh -s (which fish) $USER
# curl -Lo ~/.config/fish/functions/fisher.fish --create-dirs git.io/fisher
# fisher install 0rax/fish-bd

