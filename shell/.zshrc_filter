#!/bin/zsh
FILTER_TOOL='fzf-tmux'

if ! command -v ${FILTER_TOOL} > /dev/null 2>&1; then
  exit
fi

FILTER_COMMAND="${FILTER_TOOL} --cycle --exit-0 --ansi"
function filter(){
  ${=FILTER_COMMAND} $@
}

if [ -z "$FILTER_COMMAND" ]; then
  echo "FILTER_COMMAND variable is empty;"
  return;
fi

alias -g F='| filter'

# https://mogulla3.tech/articles/2021-09-06-search-command-history-with-incremental-search/
function select-history() {
  BUFFER=$(history -n -r 1 | awk '!seen[$0]++' | fzf --exact --reverse --no-sort --query="$LBUFFER" --cycle --prompt="History > ")
  CURSOR=${#BUFFER}
  # zle accept-line # 選択した履歴を即座に実行
}

function filter-bindkey() {
  zle -N select-history
  bindkey '^R' select-history
}


alias fgsw='filter_git_command_fmt git switch'
alias fgmg='filter_git_command git merge'
alias fgmgs='fgmg --squash'
alias fgpl='filter_git_command_fmt git pull origin'
alias fgps='filter_git_command_fmt git push origin'
alias fgbd='filter_git_command_fmt git branch -d'
alias fgbD='filter_git_command_fmt git branch -D'
alias fgb='br_org'
alias fgbd_remote='filter_git_command_fmt git push --delete origin'
alias fgrb='filter_git_command_fmt git pull --rebase origin'
alias fgl='filter_git_command git log'
alias fglp='fgl -p'
alias fgd='filter_git_command git diff'
alias fgdn='fgd --name-status'
alias fglst='fgl --stat'

alias fls='ls -aR | filter --preview "bat --color=always --style=header,grid {}"'
alias ffind='finda | filter --preview "bat --color=always --style=header,grid {}"'
alias fps='ps aux | filter'
alias fkill='ps ax | filter | awk "{ print $1 }" | xargs kill'
alias fopen='filter_find_command open'
alias fless='filter_find_command less'
alias fnv='filter_find_command nvim'
# http://qiita.com/itkrt2y/items/0671d1f48e66f21241e2
# alias fghq='save_history cd $(ghq root)/$(ghq list | filter)'

# 直近移動したブランチ一覧からgit switchする
function fgbh(){
  git --no-pager reflog | awk '$3 == "checkout:" && /moving from/ {print $8}' | awk '!seen[$0]++' | grep -Fx -f <(git branch --format='%(refname:short)') | head -30 | filter | xargs git switch
}

function fcat(){
  cat -n $@ | filter
}

# git switch -c by branch filter
function fgswc(){
  local temp=`br_org | xargs echo`
  if [[ -n $temp ]]
  then
    save_history gswc "$@" "$temp"
  fi
}

# Gitのブランチをfilter toolで扱えるように整形(remote文字列を削る)
function br_fmt(){
  br_org | sed -e 's/remotes\/origin\///'
}

# Gitのブランチをfilter toolで扱えるように整形
function br_org(){
  # 取り込まれたコミットのタイムスタンプを降順（-）でソート
  # ログをいい感じに表示 https://zenn.dev/yamo/articles/5c90852c9c64ab
  git branch -a --sort=-committerdate --color \
    | filter --preview "echo {} | sed -e 's/\*//' | awk '{print \$1}' | xargs git log --color --graph --decorate --abbrev-commit --format=format:'%C(blue)%h%C(reset) - %C(green)(%ar)%C(reset)%C(yellow)%d%C(reset)\n  %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'" \
    | xargs echo | sed -e 's/\*//' | awk '{print $1}'
}

# br_fmtのリモート対象版
function br_fmt_remote(){
  br_fmt | xargs echo | awk '{printf("%s%s\n", "remotes/origin/", $0)}'
}

# コマンドを履歴に残す
function save_history(){
  local cmd="$@"
  eval $cmd
	if test $? -ne 0
	then
		return 1
	fi
  print -s $cmd
}

# findの結果をfilter toolで絞ってコマンドを実行する
function filter_find_command(){
  local cmd="$(ffind)"
  save_history $@ $cmd
}

# ブランチをfilter toolで絞ってgitコマンドを実行する
function filter_git_command(){
  local cmd="$@ $(br_org)"
  save_history $cmd
}
function filter_git_command_fmt(){
  local cmd="$@ $(br_fmt)"
  save_history $cmd
}

# filter git diff for file
function fgd-file(){
  local temp=`br_fmt | xargs echo`
  save_history git diff "${temp}" -- "$@"
}

# filter tool git show file
function fgsf(){
  local temp=`br_fmt | xargs echo`
  save_history git show "${temp}":"$@"
}
# filter tool git show file
function fgsf-remote(){
  local temp=`br_fmt | xargs echo`
  save_history git show "remotes/origin/${temp}":"$@"
}

# github cli
# マージ先ブランチを選んでPRを作成
alias fghpc='br_fmt | xargs gh pr create --web --base'

# PR一覧からブラウザで開く
function fghpv(){
  ghpl | filter | awk '{print $1}' | xargs ghpv
}

# 自分のPR一覧からブラウザで開く
function fghpvm(){
  ghplm | filter | awk '{print $1}' | xargs ghpv
}

# PR一覧からチェックアウト
function fghco(){
  ghpl | filter | awk '{print $1}' | xargs ghco
}

# 自分のPR一覧からチェックアウト
function fghcom(){
  ghplm | filter | awk '{print $1}' | xargs ghco
}

alias fcdd='fcd-down'
# fcd-down - cd to selected directory
# https://qiita.com/kamykn/items/aa9920f07487559c0c7e
function fcd-down() {
  local dir
  dir=$(findd | filter +m) &&
  cd "$dir"
}

# fzfでdockerコンテナに入る
# https://yiskw713.hatenablog.com/entry/2022/01/12/200000#fgc-%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%83%96%E3%81%ABgit-checkout%E3%81%99%E3%82%8B
function fdocker-container() {
  local cid
  cid=$(docker ps | sed 1d | fzf -q "$1" | awk '{print $1}')
  [ -n "$cid" ] && docker exec -it "$cid" sh
}

# fzfでdockerのログを取得
# https://yiskw713.hatenablog.com/entry/2022/01/12/200000#fgc-%E3%82%A4%E3%83%B3%E3%82%BF%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%83%96%E3%81%ABgit-checkout%E3%81%99%E3%82%8B
function fdocker-log() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -q "$1" | awk '{print $1}')
  [ -n "$cid" ] && docker logs -f --tail=200 "$cid"
}
