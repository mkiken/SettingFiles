# ----------------- #
# ウィンドウの振る舞い #
# ----------------- #

## ウィンドウ番号1から開始する
set-option -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# ウィンドウ(タブ)を閉じた時、ウインドウ番号を付番をしなおす
set-option -g renumber-windows on

# ------------------- #
# ステータスバーの見た目 #
# ------------------- #

# 色コード: http://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html

# 256色サポート
set-option -g default-terminal "xterm"

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg black

# 非アクティブなウィンドウの色
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# アクティブなウィンドウの色
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# ペインボーダーの色を設定する
set -g pane-border-fg green
set -g pane-border-bg black
# アクティブなペインを目立たせる
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

# コマンドラインの色を設定する
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# ステータスバーを設定する
# ステータスバーの位置
set-option -g status-position bottom

## 左パネルを設定する
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]Window: #I #[fg=cyan]Pane: #P"

## 右パネルを設定する
set -g status-right "#[fg=magenta][%Y-%m-%d(%a) %H:%M]"

# prefixキーをC-aに変更する
set -g prefix C-t

# C-bのキーバインドを解除する
unbind C-b

# キーストロークのディレイを減らす
set -sg escape-time 1


# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# C-t*2でtmux内のプログラムにC-tを送る
bind C-t send-prefix

# vでペインを縦に分割する
bind v split-window -h -c "#{pane_current_path}"
unbind C-v
bind -n C-v split-window -h -c "#{pane_current_path}"

# sでペインを横に分割する
bind s split-window -v -c "#{pane_current_path}"
bind -n C-s split-window -v -c "#{pane_current_path}"

# Vimのキーバインドでペインを移動する
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Shift + 上下左右でペインを移動できるようにする。(＜Prefix＞不要)
# 行頭に"bind -n"をつけるとPrefixが不要になる。
bind -n S-left select-pane -L
bind -n S-down select-pane -D
bind -n S-up select-pane -U
bind -n S-right select-pane -R

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# ウィンドウ選択画面
bind Space choose-window
# 新ウィンドウ作成
# bind c new-window
# 分割していたペインそれぞれをWindowに
bind b break-pane

bind w kill-window
bind q kill-session

# ペイン終了
bind k kill-pane
# ウィンドウ終了
bind K kill-window
# ペイン番号表示
bind i display-panes
# コピーモード突入
bind -n C-Space copy-mode
# ペースト
bind p paste-buffer
bind -n C-y paste-buffer

# マウス操作を有効にする
# これを有効にすると、MacでCommand+Cなどができなくなるが、Optionを押しながら範囲選択すると、コピーできる。
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

## ステータスバーのUTF-8サポートを有効にする
set -g status-utf8 on
## リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 30
## ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on

# 一行コピー
# http://mba-hack.blogspot.jp/2014/03/tmux11.html
bind -t vi-copy z copy-line
bind -n C-y run 'tmux copy-mode\;' send-keys z\; display "1 line copied."

# コピーモードを設定する
## viのキーバインドを使用する
# setw -g mode-keys vi
set-window-option -g mode-keys emacs
# http://superuser.com/questions/397076/tmux-exits-with-exited-on-mac-os-x
## クリップボード共有を有効にする
set-option -g default-command "reattach-to-user-namespace -l zsh"
## コピーモードの操作をvi風に設定する
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -t emacs-copy v begin-selection
bind-key -t emacs-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -t emacs-copy Enter copy-selection
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
